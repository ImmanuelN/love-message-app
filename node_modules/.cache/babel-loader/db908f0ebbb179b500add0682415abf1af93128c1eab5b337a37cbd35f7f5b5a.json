{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nakal\\\\Documents\\\\Github\\\\mail-app-v1\\\\love-message-app\\\\src\\\\components\\\\MessageForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { db, collection, addDoc } from \"../lib/firebase\";\nimport ImageUpload from \"./ImageUploader\"; // Import ImageUpload component\nimport \"./MessageForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    senderName: \"\",\n    senderEmail: \"\",\n    recipientEmail: \"\",\n    message: \"\",\n    conclusion: \"\",\n    receipientName: \"\",\n    url: \"\",\n    // First image URL\n    url2: \"\" // Second image URL\n  });\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  // Handle text input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle image upload by updating the correct field (url or url2)\n  const handleImageUpload = (imageUrl, field) => {\n    console.log(`Image uploaded for ${field}:`, imageUrl);\n    setFormData(prevData => ({\n      ...prevData,\n      [field]: imageUrl\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setSuccess(false);\n    try {\n      const docRef = await addDoc(collection(db, \"messages\"), {\n        ...formData,\n        timestamp: new Date()\n      });\n      console.log(\"Message stored with ID:\", docRef.id);\n\n      // Call email function\n      const response = await fetch(\"/.netlify/functions/sendEmail\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: docRef.id,\n          senderName: formData.senderName,\n          senderEmail: formData.senderEmail,\n          recipientEmail: formData.recipientEmail,\n          receipientName: formData.receipientName,\n          conclusion: formData.conclusion,\n          message: formData.message,\n          url: formData.url,\n          url2: formData.url2\n        })\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setSuccess(true);\n        setFormData({\n          senderName: \"\",\n          senderEmail: \"\",\n          recipientEmail: \"\",\n          receipientName: \"\",\n          conclusion: \"\",\n          message: \"\",\n          url: \"\",\n          url2: \"\"\n        });\n      } else {\n        alert(\"Failed to send email: \" + result.error);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Something went wrong.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send a Loving Message \\uD83D\\uDC8C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"senderName\",\n        placeholder: \"Your Name\",\n        value: formData.senderName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"senderEmail\",\n        placeholder: \"Your Email\",\n        value: formData.senderEmail,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"receipientName\",\n        placeholder: \"Receipient Name\",\n        value: formData.receipientName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"recipientEmail\",\n        placeholder: \"Recipient Email\",\n        value: formData.recipientEmail,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        placeholder: \"Your message\",\n        value: formData.message,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"conclusion\",\n        placeholder: \"conclusion\",\n        value: formData.conclusion,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Pictures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        onUpload: url => handleImageUpload(url, \"url\"),\n        label: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n        onUpload: url => handleImageUpload(url, \"url2\"),\n        label: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"send-button\",\n        children: loading ? \"Sending...\" : \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"\\u2705 Message sent successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageForm, \"wOuMIOr0iFsdG2sXCUggBigbpq0=\");\n_c = MessageForm;\nexport default MessageForm;\nvar _c;\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","ImageUpload","jsxDEV","_jsxDEV","MessageForm","_s","formData","setFormData","senderName","senderEmail","recipientEmail","message","conclusion","receipientName","url","url2","loading","setLoading","success","setSuccess","handleChange","e","target","name","value","handleImageUpload","imageUrl","field","console","log","prevData","handleSubmit","preventDefault","docRef","timestamp","Date","id","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onUpload","label","disabled","_c","$RefreshReg$"],"sources":["C:/Users/nakal/Documents/Github/mail-app-v1/love-message-app/src/components/MessageForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { db, collection, addDoc } from \"../lib/firebase\";\r\nimport ImageUpload from \"./ImageUploader\"; // Import ImageUpload component\r\nimport \"./MessageForm.css\";\r\n\r\nconst MessageForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    senderName: \"\",\r\n    senderEmail: \"\",\r\n    recipientEmail: \"\",\r\n    message: \"\",\r\n    conclusion: \"\",\r\n    receipientName: \"\",\r\n    url: \"\", // First image URL\r\n    url2: \"\", // Second image URL\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  // Handle text input changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle image upload by updating the correct field (url or url2)\r\n  const handleImageUpload = (imageUrl, field) => {\r\n    console.log(`Image uploaded for ${field}:`, imageUrl);\r\n    setFormData((prevData) => ({ ...prevData, [field]: imageUrl }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setSuccess(false);\r\n\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"messages\"), {\r\n        ...formData,\r\n        timestamp: new Date(),\r\n      });\r\n\r\n      console.log(\"Message stored with ID:\", docRef.id);\r\n\r\n      // Call email function\r\n      const response = await fetch(\"/.netlify/functions/sendEmail\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: docRef.id,\r\n          senderName: formData.senderName,\r\n          senderEmail: formData.senderEmail,\r\n          recipientEmail: formData.recipientEmail,\r\n          receipientName: formData.receipientName,\r\n          conclusion: formData.conclusion,\r\n          message: formData.message,\r\n          url: formData.url,\r\n          url2: formData.url2,\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        setSuccess(true);\r\n        setFormData({\r\n          senderName: \"\",\r\n          senderEmail: \"\",\r\n          recipientEmail: \"\",\r\n          receipientName: \"\",\r\n          conclusion: \"\",\r\n          message: \"\",\r\n          url: \"\",\r\n          url2: \"\",\r\n        });\r\n      } else {\r\n        alert(\"Failed to send email: \" + result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Something went wrong.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Send a Loving Message 💌</h2>\r\n      <form onSubmit={handleSubmit} className=\"message-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"senderName\"\r\n          placeholder=\"Your Name\"\r\n          value={formData.senderName}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"senderEmail\"\r\n          placeholder=\"Your Email\"\r\n          value={formData.senderEmail}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          name=\"receipientName\"\r\n          placeholder=\"Receipient Name\"\r\n          value={formData.receipientName}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"recipientEmail\"\r\n          placeholder=\"Recipient Email\"\r\n          value={formData.recipientEmail}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          name=\"message\"\r\n          placeholder=\"Your message\"\r\n          value={formData.message}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          name=\"conclusion\"\r\n          placeholder=\"conclusion\"\r\n          value={formData.conclusion}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <label>\r\n          Upload Pictures\r\n        </label>\r\n\r\n        {/* Image Upload Fields using ImageUpload Component */}\r\n        <ImageUpload onUpload={(url) => handleImageUpload(url, \"url\")} label/>\r\n        <ImageUpload onUpload={(url) => handleImageUpload(url, \"url2\")} label/>\r\n\r\n        <button type=\"submit\" disabled={loading} className=\"send-button\">\r\n          {loading ? \"Sending...\" : \"Send Message\"}\r\n        </button>\r\n      </form>\r\n      {success && <p className=\"success-message\">✅ Message sent successfully!</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nakal\\\\Documents\\\\Github\\\\mail-app-v1\\\\love-message-app\\\\src\\\\components\\\\ImageUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = ({\n  onUpload,\n  label = \"Upload Image\"\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(null);\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploading(true);\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"upload_preset\", \"SouScript\"); // Make sure this preset exists in Cloudinary\n\n    try {\n      const response = await fetch(`https://api.cloudinary.com/v1_1/dcegmkp1b/image/upload`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (data.secure_url) {\n        console.log(\"Uploaded Image URL:\", data.secure_url);\n        setImageUrl(data.secure_url); // Update UI\n        onUpload(data.secure_url); // ðŸ”¹ Pass URL back to MessageForm\n      } else {\n        var _data$error;\n        console.error(\"Cloudinary response error:\", data);\n        alert(\"Upload failed: \" + (((_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.message) || \"Unknown error\"));\n      }\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Image upload failed.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageUpload,\n      disabled: uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Uploading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u2705 Uploaded: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: imageUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"9hUaUJ/7WSzqsoTwtjPM+F4YaVQ=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUploader","onUpload","label","_s","uploading","setUploading","imageUrl","setImageUrl","handleImageUpload","e","file","target","files","formData","FormData","append","response","fetch","method","body","data","json","secure_url","console","log","_data$error","error","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","disabled","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/nakal/Documents/Github/mail-app-v1/love-message-app/src/components/ImageUploader.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst ImageUploader = ({ onUpload, label = \"Upload Image\" }) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n\r\n  const handleImageUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    setUploading(true);\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"SouScript\"); // Make sure this preset exists in Cloudinary\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.cloudinary.com/v1_1/dcegmkp1b/image/upload`,\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.secure_url) {\r\n        console.log(\"Uploaded Image URL:\", data.secure_url);\r\n        setImageUrl(data.secure_url);  // Update UI\r\n        onUpload(data.secure_url);  // ðŸ”¹ Pass URL back to MessageForm\r\n      } else {\r\n        console.error(\"Cloudinary response error:\", data);\r\n        alert(\"Upload failed: \" + (data.error?.message || \"Unknown error\"));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading image:\", error);\r\n      alert(\"Image upload failed.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-upload\">\r\n      <label>{label}</label>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} disabled={uploading} />\r\n      {uploading && <p>Uploading...</p>}\r\n      {imageUrl && (\r\n        <p>\r\n          âœ… Uploaded: <a href={imageUrl} target=\"_blank\" rel=\"noopener noreferrer\">View Image</a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}